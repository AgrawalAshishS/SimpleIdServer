{
  "close": "Close",
  "save": "Save",
  "create": "Create",
  "seconds": "Secondes",
  "confirm": "Confirm",
  "applicationKinds": {
    "0": {
      "description": "Traditional web application using redirects",
      "example": "Examples : ASP.NET, Node.JS Express"
    },
    "1": {
      "description": "Web application developed with javascript",
      "example": "Examples : Angular, React, Vue"
    },
    "2": {
      "description": "Mobile and Desktop application running natively",
      "example": "Examples : Electron, WPF, Android"
    },
    "3": {
      "description": "Application is running on a server with no direct end user",
      "example": "Examples : ASP.NET with login & password authentication"
    },
    "4": {
      "description": "Daemon or service running on backend server",
      "example": "Examples : REST.API"
    }
  },
  "provisioning": {
    "list": "Provisioning",
    "history": {
      "list": "History",
      "configurationId": "Configuration Id",
      "representationId": "Id",
      "representationVersion": "Version",
      "status": "Status",
      "exception": "Exception",
      "executionDateTime": "Execution DateTime",
      "copy": "Copy",
      "statusTypes": {
        "0": "Success",
        "1": "Failed"
      }
    }
  },
  "languages": {
    "fr": "French",
    "en": "English"
  },
  "menu": {
    "welcome": "Welcome {{name}}",
    "disconnect": "Disconnect",
    "authenticate": "Authenticate",
    "choose_session": "Choose session",
    "languages": "Languages"
  },
  "workflow": {
    "list": "Workflows",
    "name": "Name",
    "description": "Description",
    "nbInstances": "Number of Instances",
    "createDateTime": "Creation DateTime",
    "updateDateTime": "Update DateTime",
    "details": "Details",
    "selectVersion": "Select Version",
    "version": "Version",
    "publish": "Publish",
    "editor": {
      "title": "Editor",
      "generalInfo": "Details",
      "id": "Identifier",
      "name": "Name",
      "serviceTaskInfo": "Service Task",
      "implementation": "Implementation",
      "csharpCallback": "C# Callback",
      "delegate": "Delegate",
      "userTaskInfo": "User Task",
      "key": "Key",
      "value": "Value",
      "exclusiveGatewayInfo": "Gateway",
      "gatewayDirections": {
        "unspecified": "Unspecified",
        "converging": "Converging",
        "diverging": "Diverging",
        "mixed": "Mixed"
      },
      "wsHumanTask": "WS HumanTask",
      "default": "Default",
      "sequenceFlowInfo": "Sequence Flow"
    },
    "instance": {
      "title": "Instance",
      "status": "Status",
      "createDateTime": "Create DateTime",
      "updateDateTime": "Update DateTime",
      "nbExecutionPath": "Nb execution path",
      "selectExecutionPath": "Select execution path",
      "executionPath": "Execution path",
      "executionPathInfo": "Execution path {{index}}, {{receptionDate}}",
      "selectedElt": "Selected Element",
      "inputTokens": "Input Tokens",
      "outgoingTokens": "Outgoing Tokens",
      "name": "Name",
      "content": "Content",
      "noElementSelected": "There is no selected element",
      "exception": "Exception"
    },
    "navs": {
      "details": "Details",
      "editor": "Editor",
      "instances": "Instances"
    },
    "messages": {
      "update": "Workflow is updated",
      "errorUpdate": "An error occured while trying to update the workflow",
      "publish": "Workflow is published",
      "errorPublish": "An error occured while trying to publish the workflow",
      "createInstance": "Workflow instance is created",
      "errorCreateInstance": "An error occured while trying to create the instance",
      "startInstance": "Workflow instance is started",
      "errorStartInstance": "An error occured while trying to start the instance"
    }
  },
  "applications": {
    "add": "Create application",
    "kty": "Key Type",
    "alg": "Algorithm",
    "use": "Usage",
    "usages": {
      "sig": "Sign",
      "enc": "Encrypt"
    },
    "messages": {
      "update": "Application is updated",
      "add": "Application is added",
      "delete": "Application is removed",
      "errorUpdate": "An error occured while trying to update the application",
      "errorAdd": "An error occured while trying to add the application",
      "errorDelete": "An error occured while trying to remove the application"
    },
    "dangerZone": "Danger zone",
    "delete": "Delete",
    "deleteTitle": "Delete this application",
    "tokenExpirationTime": "Expiration time in seconds (IdToken & AccessToken)",
    "refreshTokenExpirationTime": "Expiration time in seconds of the refresh token",
    "scopes": "Scopes",
    "certificates": "Certificates",
    "certificate": "Certificate",
    "allowedScopes": "Allowed scopes",
    "grantTypes": "Grant Types",
    "advancedSettings": "Advanced Settings",
    "list": "Applications",
    "kind": "Application Type",
    "badCallbackUri": "Callback URI must start with https",
    "callbackUrisDescription": "Callback URIS must start with https",
    "logoutUris": "Allowed Logout URLs",
    "logoutUriDescription": "",
    "token": "Token",
    "newLogoutUri": "New Logout URI",
    "uris": "Application URIs",
    "newCallbackUri": "New Callback URI",
    "callbackUris": "Callback URIs",
    "basicinfo": "Basic information",
    "tokenAuthMethod": "Token Endpoint Authentication Method",
    "clientId": "Client ID",
    "applicationKindRequired": "An application type must be selected",
    "clientName": "Name",
    "clientNameRequired": "Name is required",
    "clientSecret": "Client Secret",
    "clientLogoUri": "Application Logo",
    "applicationType": "Application Type",
    "editClientName": "Edit names",
    "editLogoUri": "Edit logo",
    "createDateTime": "Creation Datetime",
    "updateDateTime": "Update Datetime",
    "properties": "Application properties",
    "actions": {
      "copy": "Copy",
      "reveal": "Reveal Client Secret"
    },
    "tokenAuthMethods": {
      "privateKeyJwt": "Private Key Jwt",
      "clientSecretBasic": "Client Secret Basic",
      "clientSecretPost": "Client Secret Post",
      "clientSecretJwt": "Client Secret Jwt",
      "tlsClientAuth": "TLS Client Authentication",
      "selfSignedTlsClientAuth": "Self Signed TLS Client Authentication",
      "pkce": "PKCE"
    },
    "grantType": {
      "client_credentials": "Client Credentials",
      "refresh_token": "Refresh Token",
      "password": "Password",
      "authorization_code": "Authorization Code",
      "urn:openid:params:grant-type:ciba": "CIBA",
      "implicit": "Implicit"
    }
  },
  "scopes": {
    "messages": {
      "update": "Scope is updated",
      "errorUpdate": "An error occured while trying to update the scope",
      "add": "Scope is added",
      "errorAdd": "An error occured while trying to add the scope",
      "delete": "Scope is removed",
      "errorDelete": "An error occured while trying to remove the scope"
    },
    "list": "Scopes",
    "add": "Create scope",
    "scopeName": "Name",
    "scopeNameRequired": "Name is required",
    "updateDateTime": "Update Datetime",
    "isStandard": "Is standard scope ?",
    "isStandardScopeCannotBeEdited": "Is a standard scope and cannot be edited",
    "basicinfo": "Basic information",
    "claims": "Claims",
    "newClaim": "New Claim",
    "dangerZone": "Danger zone",
    "deleteTitle": "Delete this scope",
    "delete": "Delete"
  },
  "users": {
    "list": "Users",
    "userName": "Unique identifier",
    "familyName": "Family name",
    "lastModified": "Last Modified Date",
    "givenName": "Given name",
    "editPhoto": "Edit or Add a Photo",
    "photoUrl": "Url",
    "photoDisplay": "Display",
    "photoType": "Type",
    "photos": "Photos",
    "displayName": "Name",
    "nickName": "Nickname",
    "title": "Title",
    "profileUrl": "Profile URL",
    "emails": "Emails",
    "addEmail": "Add an Email",
    "editEmail": "Edit or Add an Email",
    "emailAddress": "Email Address",
    "emailDisplay": "Display",
    "emailType": "Type",
    "editAddress": "Edit or add the Address",
    "emailTypes": {
      "work": "Work",
      "home": "Home",
      "other": "Other"
    },
    "phoneNumbers": "Phone Numbers",
    "addPhoneNumber": "Add a Phone Number",
    "editPhoneNumber": "Edit or Add Phone Number",
    "phoneNumberValue": "Phone Number",
    "phoneNumberDisplay": "Display",
    "phoneNumberType": "Type",
    "phoneNumberTypes": {
      "work": "Work",
      "home": "Home",
      "mobile": "Mobile",
      "fax": "Fax",
      "pager": "Pager",
      "other": "Other"
    },
    "addresses": "Addresses",
    "addAddress": "Add an address",
    "streetAddress": "Street address",
    "addressFormatted": "Full mailing address",
    "addressLocality": "City or Locality",
    "addressRegion": "State or Region",
    "addressPostalCode": "Zip code or Postal code",
    "addressType": "Type",
    "addressTypes": {
      "work": "Work",
      "home": "Home",
      "other": "Other"
    },
    "roles": "Roles",
    "addRole": "Add a role",
    "editRole": "Edit or Add role",
    "roleValue": "Role",
    "roleDisplay": "Description",
    "roleType": "Type",
    "externalId": "External Identifier",
    "messages": {
      "errorUpdate": "An error occured while trying to update the user",
      "update": "User has been updated",
      "errorDelete": "An error occured while trying to remove the user",
      "delete": "User has been removed",
      "provision": "Provisioning has been requested, please wait some seconds before user is created",
      "errorProvision": "An error occured while trying to provision the user"
    },
    "photoTypes": {
      "photo": "Photo",
      "thumbnail": "Thumbnail"
    },
    "dangerZone": "Danger zone",
    "deleteTitle": "Delete this user",
    "delete": "Delete",
    "openidUserDoesntExist": "There is no OPENID user associate to this account, do-you want to create a new one ?",
    "create": "Create",
    "cancel": "Cancel",
    "navs": {
      "details": "Details",
      "consents": "Consents"
    },
    "consentAccess": "Following access has been granted by the user to the client {{clientId}}",
    "scopes": "Scopes",
    "claims": "Claims",
    "noClaim": "No claim",
    "noScope": "No scope",
    "deleteConsent": "Delete this consent",
    "metadata": "Metadata",
    "account": "Account",
    "noConsent": "No Consent",
    "accountStatus": "Account status : ",
    "status": {
      "0": "Created",
      "1": "Notified",
      "2": "Confirmed"
    }
  },
  "groups": {
    "list": "Groups",
    "displayName": "Name",
    "type": "Type",
    "nbMembers": "Number of members",
    "updateDateTime": "Update Datetime",
    "members": "Members",
    "selectUsers": "Select Users",
    "removeSelectedUsers": "Remove selected Users",
    "dangerZone": "Danger zone",
    "deleteTitle": "Delete this group",
    "delete": "Delete",
    "messages": {
      "errorUpdate": "An error occured while trying to update the group",
      "update": "Group has been updated",
      "delete": "Group has been removed",
      "errorDelete": "An error occured while trying to remove the group"
    }
  }
}
