{
  "close": "Close",
  "save": "Save",
  "create": "Create",
  "seconds": "Secondes",
  "applicationKinds": {
    "0": {
      "description": "Traditional web application using redirects",
      "example": "Examples : ASP.NET, Node.JS Express"
    },
    "1": {
      "description": "Web application developed with javascript",
      "example": "Examples : Angular, React, Vue"
    },
    "2": {
      "description": "Mobile and Desktop application running natively",
      "example": "Examples : Electron, WPF, Android"
    },
    "3": {
      "description": "Application is running on a server with no direct end user",
      "example": "Examples : ASP.NET with login & password authentication"
    },
    "4": {
      "description": "Daemon or service running on backend server",
      "example": "Examples : REST.API"
    }
  },
  "languages": {
    "fr": "French",
    "en": "English"
  },
  "menu": {
    "welcome": "Welcome {{name}}",
    "disconnect": "Disconnect",
    "authenticate": "Authenticate",
    "choose_session": "Choose session",
    "languages": "Languages"
  },
  "applications": {
    "add": "Create application",
    "kty": "Key Type",
    "alg": "Algorithm",
    "use": "Usage",
    "usages": {
      "sig": "Sign",
      "enc": "Encrypt"
    },
    "messages": {
      "update": "Application is updated",
      "add": "Application is added",
      "errorUpdate": "An error occured while trying to update the application",
      "errorAdd": "An error occured while trying to add the application"
    },
    "tokenExpirationTime": "Expiration time in seconds (IdToken & AccessToken)",
    "refreshTokenExpirationTime": "Expiration time in seconds of the refresh token",
    "scopes": "Scopes",
    "certificates": "Certificates",
    "certificate": "Certificate",
    "allowedScopes": "Allowed scopes",
    "grantTypes": "Grant Types",
    "advancedSettings": "Advanced Settings",
    "list": "Applications",
    "kind": "Application Type",
    "badCallbackUri": "Callback URI must start with https",
    "callbackUrisDescription": "Callback URIS must start with https",
    "logoutUris": "Allowed Logout URLs",
    "logoutUriDescription": "",
    "token": "Token",
    "newLogoutUri": "New Logout URI",
    "uris": "Application URIs",
    "newCallbackUri": "New Callback URI",
    "callbackUris": "Callback URIs",
    "basicinfo": "Basic information",
    "tokenAuthMethod": "Token Endpoint Authentication Method",
    "clientId": "Client ID",
    "applicationKindRequired": "An application type must be selected",
    "clientName": "Name",
    "clientNameRequired": "Name is required",
    "clientSecret": "Client Secret",
    "clientLogoUri": "Application Logo",
    "applicationType": "Application Type",
    "editClientName": "Edit names",
    "editLogoUri": "Edit logo",
    "createDateTime": "Creation Datetime",
    "updateDateTime": "Update Datetime",
    "properties": "Application properties",
    "actions": {
      "copy": "Copy",
      "reveal": "Reveal Client Secret"
    },
    "tokenAuthMethods": {
      "privateKeyJwt": "Private Key Jwt",
      "clientSecretBasic": "Client Secret Basic",
      "clientSecretPost": "Client Secret Post",
      "clientSecretJwt": "Client Secret Jwt",
      "tlsClientAuth": "TLS Client Authentication",
      "selfSignedTlsClientAuth": "Self Signed TLS Client Authentication",
      "pkce": "PKCE"
    },
    "grantType": {
      "client_credentials": "Client Credentials",
      "refresh_token": "Refresh Token",
      "password": "Password",
      "authorization_code": "Authorization Code",
      "urn:openid:params:grant-type:ciba": "CIBA",
      "implicit": "Implicit"
    }
  }
}
