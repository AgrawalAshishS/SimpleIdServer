@using SimpleIdServer.IdServer.Website.Stores.RealmStore;
@inherits Fluxor.Blazor.Web.Components.FluxorLayout
@inject IState<RealmsState> state
@inject ContextMenuService contextMenuService
@inject IDispatcher dispatcher

<PageTitle>SimpleIdServer Administration UI</PageTitle>

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<RadzenLayout class="rz-shadow-3">
    <RadzenHeader>
        <div class="d-flex align-items-center">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <RadzenImage Path="_content/SimpleIdServer.IdServer.Website/images/SIDLogo.svg" Style="width: 40px" />
            <RadzenText class="ml-1" Text="SimpleIdServer" TextStyle="TextStyle.DisplayH6" />
        </div>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu Click="@(args => ShowRealms(args))">
            <RadzenPanelMenuItem Text=@("Active Realm : " + state.Value.ActiveRealm) />
            <RadzenPanelMenuItem Text="Manage" />
            <RadzenPanelMenuItem Text="Clients" Icon="apps" Path="/clients" />
            <RadzenPanelMenuItem Text="Scopes" Icon="visibility" Path="/scopes" />
            <RadzenPanelMenuItem Text="Users" Icon="person" Path="/users" />
            <RadzenPanelMenuItem Text="Configure" />
            <RadzenPanelMenuItem Text="Identity Providers" Icon="facebook" Path="/idproviders" />
        </RadzenPanelMenu>
        <div class="p-2">
            Sidebar
        </div>
    </RadzenSidebar>
    <RadzenBody>
        <div class="p-2">
            @Body
        </div>
    </RadzenBody>
    <RadzenFooter>
        Footer
    </RadzenFooter>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if(firstRender)
        {
            var act = new GetAllRealmAction();
            dispatcher.Dispatch(act);
        }
    }

    void ShowRealms(MenuItemEventArgs args)
    {
        if (state.Value.IsLoading || args.Text != "Active Realm : " + state.Value.ActiveRealm) return;
        // Display popup
        var act = new SelectRealmAction { Realm = "test" };
        dispatcher.Dispatch(act);
    }
}